---
import 'normalize.css/normalize.css'
import lightIcon from '../../assets/light-theme.png'
import darkIcon from '../../assets/dark-theme.png'

export interface Props {
	title: string;
  withoutHeader?: boolean;
}

const { title, withoutHeader } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon-32x32.png" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
		<link rel="manifest" href="/site.webmanifest">
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
    {withoutHeader ? null : (
      <header>
        <h1 class="logo"><a href="/">Maksim I</a></h1>
        <div class="links">
          <a href="/articles">articles</a>
          <span>&nbsp;|&nbsp;</span>
          <a href="/projects">projects</a>
        </div>
        <button id="theme-button">
        <img src={lightIcon.src}/>
        </button>
      </header>
    )}
		<slot />

    <script define:vars={{ lightIcon, darkIcon }}>
      const themeButton = document.getElementById('theme-button')
      const themeIcon = themeButton.firstElementChild

      function setLightTheme() {
            localStorage.setItem("theme", "light")
            themeIcon.src = lightIcon.src
            document.documentElement.style.setProperty('--root-bg', '#f5f5f5'); // Light gray for the overall background
            document.documentElement.style.setProperty('--primary-bg', '#ffffff'); // White for the primary background
            document.documentElement.style.setProperty('--primary-fg', '#333333'); // Dark gray for primary text
            document.documentElement.style.setProperty('--secondary-fg', '#0056b3'); // Deep blue for secondary text, headers, etc.
            document.documentElement.style.setProperty('--shadow-fg', '#aaaaaa'); // Soft gray for shadow text
            document.documentElement.style.setProperty('--shadow-bg', '#e0e0e0'); // Light gray for shadow backgrounds
            document.documentElement.style.setProperty('--link-fg', '#1e90ff'); // Bright blue for links
            document.documentElement.style.setProperty('--info-bg', '#d1ecf1'); // Soft blue for informational backgrounds
            document.documentElement.style.setProperty('--warning-bg', '#fff3cd'); // Light yellow for warning backgrounds
            document.documentElement.style.setProperty('--code-bg', '#f3f4f6'); // Very light gray for code backgrounds
            document.documentElement.style.setProperty('--code-fg', '#d63384'); // Raspberry pink for code font color for contrast
            document.documentElement.style.setProperty('--table-cell-bg', '#ffffff'); // White for table cell backgrounds
            document.documentElement.style.setProperty('--table-cell-bg-even', 'var(--code-bg)'); // Slightly darker white for even table rows
            document.documentElement.style.setProperty('--table-header-bg', '#586086'); // Light blue-gray for table header backgrounds

            document.documentElement.style.setProperty('--side-bar-selected', 'var(--info-bg)')
            document.documentElement.style.setProperty('--side-bar-heading', 'var(--code-bg)')
            document.documentElement.style.setProperty('--side-bar-heading-selected', 'var(--primary-bg)')
       }

        function setDarkTheme() {
            localStorage.setItem("theme", "dark")
            themeIcon.src = darkIcon.src
            document.documentElement.style.setProperty('--root-bg', '#242423');
            document.documentElement.style.setProperty('--primary-bg', '#333533');
            document.documentElement.style.setProperty('--primary-fg', '#ffffff');
            document.documentElement.style.setProperty('--secondary-fg', '#e99b57');
            document.documentElement.style.setProperty('--shadow-fg', '#8f8678');
            document.documentElement.style.setProperty('--shadow-bg', '#403e3a');
            document.documentElement.style.setProperty('--link-fg', '#fca311');
            document.documentElement.style.setProperty('--info-bg', '#0d8294');
            document.documentElement.style.setProperty('--warning-bg', 'var(--secondary-fg)');
            document.documentElement.style.setProperty('--code-bg', '#24292e');
            document.documentElement.style.setProperty('--code-fg', 'var(--secondary-fg)');
            document.documentElement.style.setProperty('--table-cell-bg', 'var(--primary-bg)');
            document.documentElement.style.setProperty('--table-cell-bg-even', '#393a3e');
            document.documentElement.style.setProperty('--table-header-bg', '#586086');

            document.documentElement.style.setProperty('--side-bar-selected', 'var(--secondary-fg)')
            document.documentElement.style.setProperty('--side-bar-heading', '#3c3b39')
            document.documentElement.style.setProperty('--side-bar-heading-selected', 'var(--primary-fg)')
        }

      if (localStorage.getItem("theme") === "dark") {
        setDarkTheme()
      } else {
        setLightTheme()
      }

      themeButton.addEventListener('click', () => {
        if (localStorage.getItem("theme") === "dark") {
          setLightTheme()
        } else {
          setDarkTheme()
        }
      })
    </script>
	</body>
</html>
<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@300;400;500&display=swap');

  :root {
    --radius: 0.5rem;
  }
  * {
    box-sizing: border-box;
  }
  img {
    max-width: 100%;
  }
  .logo {
    font-size: 3rem;
    margin: 0;
  }

  #theme-button {
    background: none;
    border: none;
    color: var(--primary-fg);
    cursor: pointer;
  }

  header, footer, aside, article, main:not(.semantic), .block {
    background: var(--primary-bg);
    box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.1);
  }

  header {
    padding: 0.5rem 3rem;
    display: flex;
    justify-content: space-between;
  }

  .links {
    display: flex;
    align-items: center;
    font-size: 1.2rem;
  }

  main {
    padding: 2rem;
    font-size: 1.2rem;
  }

  body {
    background: var(--root-bg);
    margin: 0;
    font-family: 'Roboto Slab', serif;
    font-size: 16px;
    line-height: 1.5;
    color: var(--primary-fg);
  }

  a {
    color: var(--link-fg);
  }
  pre {
    padding: 1rem;
    border-radius: var(--radius);
  }
  code:not(pre code) {
    font-family: 'Roboto Mono', monospace;
    background-color: var(--code-bg);
    padding: 0 3px;
    border-radius: 3px;
    line-height: 1.5rem;
    display: inline-block;
    border: 1px solid #a9a9a9;
    color: var(--code-fg);
  }

  pre code {
    font-size: 1rem;
  }

  table, th, td {
    border: 1px solid #ddd;
  }

  th, td {
    text-align: left;
    padding: 8px;
  }

  tr {
    background-color: var(--table-cell-bg);
  }
  tr:nth-child(even) {
    background-color: var(--table-cell-bg-even);
  }

  tr:hover {
    background-color: var(--table-cell-bg-even);
  }

  th {
    background-color: var(--table-header-bg);
    color: white;
  }

  @media (max-width: 750px) {
    table {
      display: block;
      max-width: fit-content;
      margin: 0 auto;
      overflow-x: auto;
    }
    td {
      min-width: 250px;
    }

    header {
      padding: 0.5rem 1.5rem;
      flex-wrap: wrap;
    }
    .logo {
      width: 100%;
      text-align: center;
    }
  }

  panel {
    max-width: 70%;
    padding: 0.8rem 1rem;
    border: 1px solid;
    border-radius: 5px;
    display: block;
    background-color: var(--root-bg);
  }
  @media (max-width: 1000px) {
    panel {
      max-width: 100%;
    }
  }
  panel.info {
     background-color: var(--info-bg);
     border-color: #4b7ba6; 
  }
  panel.warning {
    background-color: var(--warning-bg);
    border-color: #a68f4b;
  }

</style>
